vector 容器是 STL 中最常用的容器之一，它和 array 容器非常类似，都可以看做是对 C++ 普通数组的“升级版”。
不同之处在于，array 实现的是静态数组（容量固定的数组），而 vector 实现的是一个动态数组，
即可以进行元素的插入和删除，在此过程中，vector 会动态调整所占用的内存空间，整个过程无需人工干预。

vector 常被称为向量容器，因为该容器擅长在尾部插入或删除元素，在常量时间内就可以完成，时间复杂度为O(1)；
而对于在容器头部或者中部插入或删除元素，则花费时间要长一些（移动元素需要耗费时间），时间复杂度为线性阶O(n)

vector的扩容机制在于，就是配置比其所容纳的元素所需更多的内存，一般在使用vector之前，
就先预留足够空间，以避免二次分配，这样可以使vector的性能达到最佳

假如vector的容量为8，容器的实际元素为6，
开始向容器添加元素，假如超出了容器的容量，vector容器就会自动扩容，
vector的存储是一段连续的地址，当vector超出容量是他会在地址后面添加
但是有个问题：假如地址后面的内存一被占用，那么vector容器就不连续了，
所以vector容器会判断地址是否连续，如果不连续就重新开辟一处地址把原来的地址的值拷贝进去，再把原地址释放
这是vector容器的早期版本

现在vector容器已经取消了判断，因为每次扩容就判读太浪费
所以现在vector容器扩容直接先分配，拷贝过去后再释放。
